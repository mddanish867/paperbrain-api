"""create paperbrainusers table

Revision ID: ffae0f95300a
Revises: 
Create Date: 2025-08-29 23:59:23.823605

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ffae0f95300a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('account_deletions')
    op.drop_table('Comparison')
    op.drop_table('Document')
    op.drop_index(op.f('Users_email_idx'), table_name='Users')
    op.drop_index(op.f('Users_email_key'), table_name='Users')
    op.drop_index(op.f('Users_googleId_key'), table_name='Users')
    op.drop_index(op.f('Users_magicLink_key'), table_name='Users')
    op.drop_index(op.f('Users_mobile_key'), table_name='Users')
    op.drop_index(op.f('Users_ssoId_idx'), table_name='Users')
    op.drop_index(op.f('Users_username_key'), table_name='Users')
    op.drop_table('Users')
    op.drop_table('interactions')
    op.drop_table('UserSession')
    op.drop_table('UploadedFile')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('Chat')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Chat',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('fileId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['fileId'], ['UploadedFile.id'], name=op.f('Chat_fileId_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('Chat_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('email_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('UploadedFile',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('UploadedFile_pkey'))
    )
    op.create_table('UserSession',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('device', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('os', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('browser', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('isActive', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('UserSession_pkey'))
    )
    op.create_table('interactions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('question_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('answer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('answer_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('interactions_pkey'))
    )
    op.create_table('Users',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('password', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('picture', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ssoProvider', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ssoId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lastLogin', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('otp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('otpAttempts', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('lastOtpRequestTime', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('otpExpiresAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('isVerified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('isMagicLinkUsed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('magicLink', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('magicLinkExpiresAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('is2FAEnabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('googleId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('Users_pkey'))
    )
    op.create_index(op.f('Users_username_key'), 'Users', ['username'], unique=True)
    op.create_index(op.f('Users_ssoId_idx'), 'Users', ['ssoId'], unique=False)
    op.create_index(op.f('Users_mobile_key'), 'Users', ['mobile'], unique=True)
    op.create_index(op.f('Users_magicLink_key'), 'Users', ['magicLink'], unique=True)
    op.create_index(op.f('Users_googleId_key'), 'Users', ['googleId'], unique=True)
    op.create_index(op.f('Users_email_key'), 'Users', ['email'], unique=True)
    op.create_index(op.f('Users_email_idx'), 'Users', ['email'], unique=False)
    op.create_table('Document',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fileName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('filePath', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('convertedFilePath', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('convertedType', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('context', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('entities', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('fileSize', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('insights', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('pageCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sentiment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('topic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uploadedtype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('Document_pkey'))
    )
    op.create_table('Comparison',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('file1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('Comparison_pkey'))
    )
    op.create_table('account_deletions',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('userId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deletedAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('account_deletions_pkey'))
    )
    # ### end Alembic commands ###
